// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 8.0.10
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#nullable enable
namespace DialogFramework.Domain.Builders.DialogPartResults
{
    public partial class MultipleQuestionDialogPartResultBuilder<T> : DialogFramework.Domain.Builders.DialogPartResultBuilder<MultipleQuestionDialogPartResultBuilder<T>, DialogFramework.Domain.DialogPartResults.MultipleQuestionDialogPartResult<T>>
    {
        private System.Collections.ObjectModel.ObservableCollection<T> _values;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public System.Collections.ObjectModel.ObservableCollection<T> Values
        {
            get
            {
                return _values;
            }
            set
            {
                _values = value ?? throw new System.ArgumentNullException(nameof(value));
                HandlePropertyChanged(nameof(Values));
            }
        }

        public MultipleQuestionDialogPartResultBuilder(DialogFramework.Domain.DialogPartResults.MultipleQuestionDialogPartResult<T> source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _values = new System.Collections.ObjectModel.ObservableCollection<T>();
            if (source.Values is not null) foreach (var item in source.Values) _values.Add(item);
        }

        public MultipleQuestionDialogPartResultBuilder() : base()
        {
            _values = new System.Collections.ObjectModel.ObservableCollection<T>();
            SetDefaultValues();
        }

        public override DialogFramework.Domain.DialogPartResults.MultipleQuestionDialogPartResult<T> BuildTyped()
        {
            return new DialogFramework.Domain.DialogPartResults.MultipleQuestionDialogPartResult<T>(Values, PartId);
        }

        partial void SetDefaultValues();

        public DialogFramework.Domain.Builders.DialogPartResults.MultipleQuestionDialogPartResultBuilder<T> AddValues(System.Collections.Generic.IEnumerable<T> values)
        {
            if (values is null) throw new System.ArgumentNullException(nameof(values));
            return AddValues(values.ToArray());
        }

        public DialogFramework.Domain.Builders.DialogPartResults.MultipleQuestionDialogPartResultBuilder<T> AddValues(params T[] values)
        {
            if (values is null) throw new System.ArgumentNullException(nameof(values));
            foreach (var item in values) Values.Add(item);
            return this;
        }
    }
    public partial class SingleQuestionDialogPartResultBuilder<T> : DialogFramework.Domain.Builders.DialogPartResultBuilder<SingleQuestionDialogPartResultBuilder<T>, DialogFramework.Domain.DialogPartResults.SingleQuestionDialogPartResult<T>>
    {
        private T? _value;

        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public T? Value
        {
            get
            {
                return _value;
            }
            set
            {
                _value = value;
                HandlePropertyChanged(nameof(Value));
            }
        }

        public SingleQuestionDialogPartResultBuilder(DialogFramework.Domain.DialogPartResults.SingleQuestionDialogPartResult<T> source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _value = source.Value;
        }

        public SingleQuestionDialogPartResultBuilder() : base()
        {
            SetDefaultValues();
        }

        public override DialogFramework.Domain.DialogPartResults.SingleQuestionDialogPartResult<T> BuildTyped()
        {
            return new DialogFramework.Domain.DialogPartResults.SingleQuestionDialogPartResult<T>(Value, PartId);
        }

        partial void SetDefaultValues();

        public DialogFramework.Domain.Builders.DialogPartResults.SingleQuestionDialogPartResultBuilder<T> WithValue(T? value)
        {
            Value = value;
            return this;
        }
    }
}
#nullable disable
