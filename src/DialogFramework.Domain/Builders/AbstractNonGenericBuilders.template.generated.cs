// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 8.0.10
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#nullable enable
namespace DialogFramework.Domain.Builders
{
    public abstract partial class DialogPartBuilder
    {
        private string _id;

        private ExpressionFramework.Domain.Builders.EvaluatableBuilder? _condition;

        private string _title;

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string Id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                HandlePropertyChanged(nameof(Id));
            }
        }

        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public ExpressionFramework.Domain.Builders.EvaluatableBuilder? Condition
        {
            get
            {
                return _condition;
            }
            set
            {
                _condition = value;
                HandlePropertyChanged(nameof(Condition));
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string Title
        {
            get
            {
                return _title;
            }
            set
            {
                _title = value;
                HandlePropertyChanged(nameof(Title));
            }
        }

        protected DialogPartBuilder(DialogFramework.Domain.DialogPart source)
        {
            _id = source.Id;
            _condition = source.Condition?.ToBuilder()!;
            _title = source.Title;
        }

        protected DialogPartBuilder()
        {
            _id = string.Empty;
            _title = string.Empty;
            SetDefaultValues();
        }

        public abstract DialogFramework.Domain.DialogPart Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    public abstract partial class DialogPartResultBuilder
    {
        private string _partId;

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string PartId
        {
            get
            {
                return _partId;
            }
            set
            {
                _partId = value;
                HandlePropertyChanged(nameof(PartId));
            }
        }

        protected DialogPartResultBuilder(DialogFramework.Domain.DialogPartResult source)
        {
            _partId = source.PartId;
        }

        protected DialogPartResultBuilder()
        {
            _partId = string.Empty;
            SetDefaultValues();
        }

        public abstract DialogFramework.Domain.DialogPartResult Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    public abstract partial class ValidationRuleBuilder
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected ValidationRuleBuilder(DialogFramework.Domain.ValidationRule source)
        {
        }

        protected ValidationRuleBuilder()
        {
            SetDefaultValues();
        }

        public abstract DialogFramework.Domain.ValidationRule Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}
#nullable disable
